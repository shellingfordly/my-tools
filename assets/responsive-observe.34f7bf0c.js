import{g as u,i as m,_ as f}from"./index.d66503d3.js";import{d as h,c,o as _,a as v,n as g,e as w,f as b}from"./index.51e79113.js";const x=h({name:"IconDown",props:{size:{type:[Number,String]},strokeWidth:{type:Number,default:4},strokeLinecap:{type:String,default:"butt",validator:e=>["butt","round","square"].includes(e)},strokeLinejoin:{type:String,default:"miter",validator:e=>["arcs","bevel","miter","miter-clip","round"].includes(e)},spin:Boolean},setup(e){const t=u("icon"),r=c(()=>[t,`${t}-down`,{[`${t}-spin`]:e.spin}]),s=c(()=>{if(e.size)return{fontSize:m(e.size)?`${e.size}px`:e.size}});return{cls:r,sizeStyle:s}}}),y=["stroke-width","stroke-linecap","stroke-linejoin"],k=b("path",{d:"M39.6 17.443 24.043 33 8.487 17.443"},null,-1),O=[k];function P(e,t,r,s,l,C){return _(),v("svg",{viewBox:"0 0 48 48",fill:"none",xmlns:"http://www.w3.org/2000/svg",stroke:"currentColor",class:g(e.cls),style:w(e.sizeStyle),"stroke-width":e.strokeWidth,"stroke-linecap":e.strokeLinecap,"stroke-linejoin":e.strokeLinejoin},O,14,y)}var a=f(x,[["render",P]]);const N=Object.assign(a,{install:(e,t)=>{var r;const s=(r=t==null?void 0:t.iconPrefix)!=null?r:"";e.component(s+a.name,a)}});var j=Object.defineProperty,z=Object.defineProperties,S=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,E=Object.prototype.hasOwnProperty,$=Object.prototype.propertyIsEnumerable,d=(e,t,r)=>t in e?j(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,I=(e,t)=>{for(var r in t||(t={}))E.call(t,r)&&d(e,r,t[r]);if(p)for(var r of p(t))$.call(t,r)&&d(e,r,t[r]);return e},L=(e,t)=>z(e,S(t));const q=["xxl","xl","lg","md","sm","xs"],i={xs:"(max-width: 575px)",sm:"(min-width: 576px)",md:"(min-width: 768px)",lg:"(min-width: 992px)",xl:"(min-width: 1200px)",xxl:"(min-width: 1600px)"};let n=[],B=-1,o={};const H={matchHandlers:{},dispatch(e,t){return o=e,n.length<1?!1:(n.forEach(r=>{r.func(o,t)}),!0)},subscribe(e){n.length===0&&this.register();const t=(++B).toString();return n.push({token:t,func:e}),e(o,null),t},unsubscribe(e){n=n.filter(t=>t.token!==e),n.length===0&&this.unregister()},unregister(){Object.keys(i).forEach(e=>{const t=i[e];if(!t)return;const r=this.matchHandlers[t];r&&r.mql&&r.listener&&r.mql.removeEventListener("change",r.listener)})},register(){Object.keys(i).forEach(e=>{const t=i[e];if(!t)return;const r=({matches:l})=>{this.dispatch(L(I({},o),{[e]:l}),e)},s=window.matchMedia(t);s.addEventListener("change",r),this.matchHandlers[t]={mql:s,listener:r},r(s)})}};export{N as I,q as a,H as r};
